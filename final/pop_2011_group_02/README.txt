>>> COURSE >>>

Process Oriented Programming (1DT083) Spring 2011


>>> GROUP >>>

02


>>> PROJECT NAME >>>

Pear-Talk


>>> PROJECT DESCRIPTION >>>

This project is about making a chat service, where all communication
from one user to another will be peer-2-peer. The service offers the ability
to easily create your own server, making it possible for anyone to create
a community server, since all communication is peer-2-peer between users
the server doesn't need to be so powerful.


>>> GROUP MEMBERS >>>

881019-5613 Gabriel.Tholsgard.5951@student.uu.se
881007-1491 nilsgoran.hagelin.8069@student.uu.se
900907-3751 kristian.ionescu.3965@student.uu.se
851101-4915 marten.blomberg.1234@student.uu.se
841106-7138 staffan.reinius.5353@student.uu.se
791006-4133 Stefano.Pellegrini.2533@student.uu.se


>>> MAY THE SOURCE BE WITH YOU >>>

Everything you need to compile and run the system is included in this
directory. 

However, you might want to get the most up to date version of this
directory. 

Add a description here on how to use Subversion, Git or similar to get
the most up to date version of this directory.

svn checkout http://pear-talk.googlecode.com/svn/trunk/ src


>>> DIRECTORY CONTENTS >>>

.
├── Makefile 
├── README.txt (the file you are reading right now).
├── doc/
│   ├── final_presentation.pdf
│   ├── final_report.pdf
│   └── html/ (all files generated by Edoc)
├── ebin/ (beam files)
├── include/ (record and macro definitions in .hrl files)
└── src/ (Erlang source files) 

>>> ERLANG VERSION >>>

This code has been developed and tested using Erlang version R14B02 and Eshell V5.8.3. 

>>> MAKE IT HAPPEN >>>

Using the make utility you can perform the following actions:

make         ==> Compiles the Erlang source files if necessary. 
make archive ==> Creates a gziped tar archive of this directory. 
make clean   ==> Removes all beam files and html files generated by Edoc.
make doc     ==> Generates Edoc documentation in the doc/html directory.
make start   ==> Starts the system.
make test    ==> Runs all Eunit tests.


>>> TO COMPILE >>>

To compile the project, simply type "make server <Enter>" and "make client <Enter>".


>>> TO RUN AND TEST THE SYSTEM >>>

just type server:start_server(Your server port) in the erlang shell and the server will start

to start a client just type peer:start(1) in the erlang shell and the program will ask for the
needed data.

local port is the client's port and you have to specify different numbers if you wish to run 
several clients on the same computer. You cannot start more than one client per erlang shell, so
in this case you'll have to open as many shells as the number of client you want to test. Normally
you will have one for each computer


If possible, add targets to the Makefile that can be used to start the
system (make start, make start_server, make start_client or similar as
necessary). 

>>> MORE INFORMATION (optional) >>>

 * How to get more information about your project?
 * Who is the main contact person?
 * Do you have a project home page?
