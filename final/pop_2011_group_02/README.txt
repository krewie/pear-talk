>>> COURSE >>>

Process Oriented Programming (1DT083) Spring 2011


>>> GROUP >>>

02


>>> PROJECT NAME >>>

Pear-Talk


>>> PROJECT DESCRIPTION >>>

This project is about making a chat service, where all communication
from one user to another will be peer-2-peer. The service offers the ability
to easily create your own server, making it possible for anyone to create
a community server, since all communication is peer-2-peer between users
the server doesn't need to be so powerful.


>>> GROUP MEMBERS >>>

881019-5613 Gabriel.Tholsgard.5951@student.uu.se
YYMMDD-XXXX Firstname.Lastname.1234@student.uu.se
YYMMDD-XXXX Firstname.Lastname.1234@student.uu.se
YYMMDD-XXXX Firstname.Lastname.1234@student.uu.se
YYMMDD-XXXX Firstname.Lastname.1234@student.uu.se
YYMMDD-XXXX Firstname.Lastname.1234@student.uu.se


>>> MAY THE SOURCE BE WITH YOU >>>

Everything you need to compile and run the system is included in this
directory. 

However, you might want to get the most up to date version of this
directory. 

Add a description here on how to use Subversion, Git or similar to get
the most up to date version of this directory.

svn checkout http://pear-talk.googlecode.com/svn/trunk/ src


>>> DIRECTORY CONTENTS >>>

.
├── Makefile 
├── README.txt (the file you are reading right now).
├── doc/
│   ├── final_presentation.pdf
│   ├── final_report.pdf
│   └── html/ (all files generated by Edoc)
├── ebin/ (beam files)
├── include/ (record and macro definitions in .hrl files)
└── src/ (Erlang source files) 

>>> ERLANG VERSION >>>

This code has been developed and tested using Erlang version XX. 

>>> MAKE IT HAPPEN >>>

Using the make utility you can perform the following actions:

make         ==> Compiles the Erlang source files if necessary. 
make archive ==> Creates a gziped tar archive of this directory. 
make clean   ==> Removes all beam files and html files generated by Edoc.
make doc     ==> Generates Edoc documentation in the doc/html directory.
make start   ==> Starts the system.
make test    ==> Runs all Eunit tests.


>>> TO COMPILE >>>

To compile the project, simply type make and press enter.


>>> TO RUN AND TEST THE SYSTEM >>>

Add a short description on how to run and test your system. Here you
might give pointers to more details in the doc/final_presentation.pdf
document. 

If possible, add targets to the Makefile that can be used to start the
system (make start, make start_server, make start_client or similar as
necessary). 

>>> MORE INFORMATION (optional) >>>

 * How to get more information about your project?
 * Who is the main contact person?
 * Do you have a project home page?
